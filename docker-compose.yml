
services:
  laravel-app:
    build:
      context: ./
      dockerfile: Dockerfile
    image: bienfait/laravel-app-image:v1.0.0
    # container_name: laravel-app-container
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - laravel-app-network
    depends_on:
      db:
        condition: service_healthy # Wait for the MySQL container to be healthy
    environment:
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    deploy:
      mode: replicated
      replicas: 3
  

  laravel-reverb-server:
    image: bienfait/laravel-app-image:v1.0.0 # Use the same image as the Laravel app
    container_name: reverb-server
    ports:
      - "8080:8080"  # Reverb (WebSocket server) port
    depends_on:
      - laravel-app
    environment:
      REVERB_APP_ID: ${REVERB_APP_ID}  # Set this in your .env file
      REVERB_APP_KEY: ${REVERB_APP_KEY}
      REVERB_APP_SECRET: ${REVERB_APP_SECRET}
      REVERB_HOST: "laraverb-server"   # Container name as the host
      REVERB_PORT: 8080
      REVERB_SCHEME: "http"
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel-app-network
    command: php artisan reverb:start
 
  laravel-queue-worker:
    image: bienfait/laravel-app-image:v1.0.0 # Use the same image as the Laravel app
    container_name: laravel-queue-worker
    tty: true
    depends_on:
      - laravel-app
    environment:
      SERVICE_NAME: laravel-queue-worker
      SERVICE_TAGS: dev
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel-app-network
    command: php artisan queue:work --queue=default --sleep=3 --tries=3 --max-time=3600
    restart: always

 
  db:
    image: mysql:8.0
    container_name: laravel-app-db-container
    restart: unless-stopped
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
    networks:
      - laravel-app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: laravel-app-nginx-container
    restart: unless-stopped
    ports:
      - 8089:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - laravel-app-network
   

networks:
  laravel-app-network:
    driver: bridge

volumes:
  db-data:
